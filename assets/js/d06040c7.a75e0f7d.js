"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4535],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>x});var r=n(9496);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},E=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=l(n),E=s,x=c["".concat(p,".").concat(E)]||c[E]||d[E]||a;return n?r.createElement(x,o(o({ref:t},u),{},{components:n})):r.createElement(x,o({ref:t},u))}));function x(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=E;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}E.displayName="MDXCreateElement"},275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(4778),s=(n(9496),n(9613));const a={title:"Spring Boot \u5e38\u7528\u5f02\u5e38\u9519\u8bef\u5904\u7406\u65b9\u5f0f",sidebar_label:"Spring Boot \u5e38\u7528\u5f02\u5e38\u9519\u8bef\u5904\u7406\u65b9\u5f0f"},o=void 0,i={unversionedId:"Java/spring/global-error-handler-in-a-spring-boot",id:"Java/spring/global-error-handler-in-a-spring-boot",title:"Spring Boot \u5e38\u7528\u5f02\u5e38\u9519\u8bef\u5904\u7406\u65b9\u5f0f",description:"\u901a\u8fc7 @ControllerAdvice\u548c@ExceptionHandler \u6ce8\u89e3\u6765\u5904\u7406\u5168\u5c40\u5f02\u5e38\u5185\u5bb9\u4ee5\u63a7\u5236\u7279\u5b9aController\u548c\u5f02\u5e38\u7c7b\u578b",source:"@site/docs/Java/spring/global-error-handler-in-a-spring-boot.md",sourceDirName:"Java/spring",slug:"/Java/spring/global-error-handler-in-a-spring-boot",permalink:"/docs/Java/spring/global-error-handler-in-a-spring-boot",draft:!1,editUrl:"https://github.com/An0nymous0/ga0x-site/tree/main/docs/Java/spring/global-error-handler-in-a-spring-boot.md",tags:[],version:"current",lastUpdatedAt:1666596386,formattedLastUpdatedAt:"2022\u5e7410\u670824\u65e5",frontMatter:{title:"Spring Boot \u5e38\u7528\u5f02\u5e38\u9519\u8bef\u5904\u7406\u65b9\u5f0f",sidebar_label:"Spring Boot \u5e38\u7528\u5f02\u5e38\u9519\u8bef\u5904\u7406\u65b9\u5f0f"},sidebar:"tutorialSidebar",previous:{title:"SpringBoot \u5e38\u7528\u53c2\u6570\u6821\u9a8c\u6280\u5de7",permalink:"/docs/Java/spring/spring-boot-valid"},next:{title:"AuthenticationManager \u548c AuthenticationProvider",permalink:"/docs/Java/spring-security/authenticationManager-and-authenticationProvider"}},p={},l=[{value:"\u901a\u8fc7 @ControllerAdvice\u548c@ExceptionHandler \u6ce8\u89e3\u6765\u5904\u7406\u5168\u5c40\u5f02\u5e38\u5185\u5bb9\u4ee5\u63a7\u5236\u7279\u5b9aController\u548c\u5f02\u5e38\u7c7b\u578b",id:"\u901a\u8fc7-controlleradvice\u548cexceptionhandler-\u6ce8\u89e3\u6765\u5904\u7406\u5168\u5c40\u5f02\u5e38\u5185\u5bb9\u4ee5\u63a7\u5236\u7279\u5b9acontroller\u548c\u5f02\u5e38\u7c7b\u578b",level:2},{value:"\u81ea\u5b9a\u4e49\u6574\u4e2aJSON\u9519\u8bef\u54cd\u5e94",id:"\u81ea\u5b9a\u4e49\u6574\u4e2ajson\u9519\u8bef\u54cd\u5e94",level:3},{value:"\u91cd\u5199\u7279\u5b9a\u5f02\u5e38\u7684\u72b6\u6001\u7801",id:"\u91cd\u5199\u7279\u5b9a\u5f02\u5e38\u7684\u72b6\u6001\u7801",level:3},{value:"\u914d\u5408 ResponseEntityExceptionHandler \u7c7b\u7528\u4e8e\u91cd\u5199Spring\u5df2\u7ecf\u5b9e\u73b0\u7684\u5f02\u5e38\u5904\u7406",id:"\u914d\u5408-responseentityexceptionhandler-\u7c7b\u7528\u4e8e\u91cd\u5199spring\u5df2\u7ecf\u5b9e\u73b0\u7684\u5f02\u5e38\u5904\u7406",level:3},{value:"\u901a\u8fc7\u7ee7\u627f BasicErrorController \u6765\u5904\u7406\u54cd\u5e94\u548c/error",id:"\u901a\u8fc7\u7ee7\u627f-basicerrorcontroller-\u6765\u5904\u7406\u54cd\u5e94\u548cerror",level:2},{value:"\u7528\u6cd5",id:"\u7528\u6cd5",level:3},{value:"\u6ce8\u610f",id:"\u6ce8\u610f",level:3},{value:"\u901a\u8fc7\u7ee7\u627f<code>DefaultErrorAttributes</code>\u6765\u5904\u7406\u9519\u8bef\u5c5e\u6027\u4fe1\u606f",id:"\u901a\u8fc7\u7ee7\u627fdefaulterrorattributes\u6765\u5904\u7406\u9519\u8bef\u5c5e\u6027\u4fe1\u606f",level:2},{value:"\u81ea\u5b9a\u4e49\u5f02\u5e38@ResponseStatus\u6ce8\u89e3\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u8fd4\u56de\u4fe1\u606f",id:"\u81ea\u5b9a\u4e49\u5f02\u5e38responsestatus\u6ce8\u89e3\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u8fd4\u56de\u4fe1\u606f",level:2},{value:"\u5229\u7528\u5f02\u5e38\u7c7bResponseStatusException\u629b\u51fa\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u5f02\u5e38\u4fe1\u606f",id:"\u5229\u7528\u5f02\u5e38\u7c7bresponsestatusexception\u629b\u51fa\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u5f02\u5e38\u4fe1\u606f",level:2}],u={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"\u901a\u8fc7-controlleradvice\u548cexceptionhandler-\u6ce8\u89e3\u6765\u5904\u7406\u5168\u5c40\u5f02\u5e38\u5185\u5bb9\u4ee5\u63a7\u5236\u7279\u5b9acontroller\u548c\u5f02\u5e38\u7c7b\u578b"},"\u901a\u8fc7 @ControllerAdvice\u548c@ExceptionHandler \u6ce8\u89e3\u6765\u5904\u7406\u5168\u5c40\u5f02\u5e38\u5185\u5bb9\u4ee5\u63a7\u5236\u7279\u5b9aController\u548c\u5f02\u5e38\u7c7b\u578b"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"@ControllerAdvice\u6ce8\u89e3\u662f\u63a7\u5236\u5168\u5c40\u5f02\u5e38\u6700\u7075\u6d3b\u7684\u4e00\u79cd\u65b9\u5f0f")),(0,s.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u6574\u4e2ajson\u9519\u8bef\u54cd\u5e94"},"\u81ea\u5b9a\u4e49\u6574\u4e2aJSON\u9519\u8bef\u54cd\u5e94"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"@ControllerAdvice\npublic class GlobalExceptionHandler {\n \n    @ExceptionHandler(CustomException.class)\n    public ResponseEntity<CustomErrorResponse> customHandleCustomException(Exception ex) {\n \n        CustomErrorResponse errors = new CustomErrorResponse();\n        errors.setTimestamp(LocalDateTime.now());\n        errors.setError(ex.getMessage());\n        errors.setStatus(HttpStatus.NOT_FOUND.value());\n \n        return new ResponseEntity<>(errors, HttpStatus.BAD_REQUEST);\n    }\n \n    //...\n}\n")),(0,s.kt)("h3",{id:"\u91cd\u5199\u7279\u5b9a\u5f02\u5e38\u7684\u72b6\u6001\u7801"},"\u91cd\u5199\u7279\u5b9a\u5f02\u5e38\u7684\u72b6\u6001\u7801"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"@RestControllerAdvice\npublic class GlobalExceptionHandler {\n    @ExceptionHandler(ValidateException.class)\n    public void handleControllerException(HttpServletResponse response) throws IOException {\n        response.sendError(HttpStatus.BAD_REQUEST.value());\n    }\n}\n")),(0,s.kt)("h3",{id:"\u914d\u5408-responseentityexceptionhandler-\u7c7b\u7528\u4e8e\u91cd\u5199spring\u5df2\u7ecf\u5b9e\u73b0\u7684\u5f02\u5e38\u5904\u7406"},"\u914d\u5408 ResponseEntityExceptionHandler \u7c7b\u7528\u4e8e\u91cd\u5199Spring\u5df2\u7ecf\u5b9e\u73b0\u7684\u5f02\u5e38\u5904\u7406"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Spring\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u5f02\u5e38\u5904\u7406\u7c7b",(0,s.kt)("inlineCode",{parentName:"p"},"ResponseEntityExceptionHandler")," \u5185\u90e8\u540c\u6837\u662f\u7528",(0,s.kt)("inlineCode",{parentName:"p"},"@ExceptionHandler"),"\u6ce8\u89e3\u96c6\u6210\u4e86\u4e00\u4e9b\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406 \u901a\u8fc7",(0,s.kt)("inlineCode",{parentName:"p"},"handleException()"),"  \u65b9\u6cd5\u5224\u65ad\u5f02\u5e38\u7c7b\u578b\u7136\u540e\u4ea4\u7531",(0,s.kt)("inlineCode",{parentName:"p"},"handleXXX()")," \u5f00\u5934\u7684\u65b9\u6cd5\u5904\u7406 \u6240\u4ee5\u6211\u4eec\u7ee7\u627f\u4e4b\u540e\u91cd\u5199\u76f8\u5e94\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"@ControllerAdvice\npublic class GlobalExceptionHandler extends ResponseEntityExceptionHandler {\n\n    /**\n     * \u5904\u7406@RequestParam\u9519\u8bef, \u5373\u53c2\u6570\u4e0d\u8db3\n     * @return\n     */\n    @Override\n    protected ResponseEntity<Object> handleMissingServletRequestParameter(MissingServletRequestParameterException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {\n\n        return new ResponseEntity<>(new MatrixResponse(ErrorCode.ARG_INVALID), status);\n    }\n}\n")),(0,s.kt)("p",null,"\u5982\u679c\u60f3\u77e5\u9053Spring\u63d0\u524d\u5e2e\u6211\u4eec\u63d0\u524d\u96c6\u6210\u4e86\u54ea\u4e9b\u5f02\u5e38\u5904\u7406\u53ef\u4ee5\u770b",(0,s.kt)("inlineCode",{parentName:"p"},"ResponseEntityExceptionHandler"),"\u7684\u5b9e\u73b0"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"package org.springframework.web.servlet.mvc.method.annotation;\n\n//...\npublic abstract class ResponseEntityExceptionHandler {\n\n    /**\n     * Provides handling for standard Spring MVC exceptions.\n     * @param ex the target exception\n     * @param request the current request\n     */\n    @ExceptionHandler({\n            HttpRequestMethodNotSupportedException.class,\n            HttpMediaTypeNotSupportedException.class,\n            HttpMediaTypeNotAcceptableException.class,\n            MissingPathVariableException.class,\n            MissingServletRequestParameterException.class,\n            ServletRequestBindingException.class,\n            ConversionNotSupportedException.class,\n            TypeMismatchException.class,\n            HttpMessageNotReadableException.class,\n            HttpMessageNotWritableException.class,\n            MethodArgumentNotValidException.class,\n            MissingServletRequestPartException.class,\n            BindException.class,\n            NoHandlerFoundException.class,\n            AsyncRequestTimeoutException.class\n        })\n    @Nullable\n    public final ResponseEntity<Object> handleException(Exception ex, WebRequest request) throws Exception {\n        HttpHeaders headers = new HttpHeaders();\n\n        if (ex instanceof HttpRequestMethodNotSupportedException) {\n            HttpStatus status = HttpStatus.METHOD_NOT_ALLOWED;\n            return handleHttpRequestMethodNotSupported((HttpRequestMethodNotSupportedException) ex, headers, status, request);\n        }\n        else if (ex instanceof HttpMediaTypeNotSupportedException) {\n            HttpStatus status = HttpStatus.UNSUPPORTED_MEDIA_TYPE;\n            return handleHttpMediaTypeNotSupported((HttpMediaTypeNotSupportedException) ex, headers, status, request);\n        }\n        else if (ex instanceof HttpMediaTypeNotAcceptableException) {\n            HttpStatus status = HttpStatus.NOT_ACCEPTABLE;\n            return handleHttpMediaTypeNotAcceptable((HttpMediaTypeNotAcceptableException) ex, headers, status, request);\n        }\n        else if (ex instanceof MissingPathVariableException) {\n            HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR;\n            return handleMissingPathVariable((MissingPathVariableException) ex, headers, status, request);\n        }\n        else if (ex instanceof MissingServletRequestParameterException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleMissingServletRequestParameter((MissingServletRequestParameterException) ex, headers, status, request);\n        }\n        else if (ex instanceof ServletRequestBindingException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleServletRequestBindingException((ServletRequestBindingException) ex, headers, status, request);\n        }\n        else if (ex instanceof ConversionNotSupportedException) {\n            HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR;\n            return handleConversionNotSupported((ConversionNotSupportedException) ex, headers, status, request);\n        }\n        else if (ex instanceof TypeMismatchException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleTypeMismatch((TypeMismatchException) ex, headers, status, request);\n        }\n        else if (ex instanceof HttpMessageNotReadableException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleHttpMessageNotReadable((HttpMessageNotReadableException) ex, headers, status, request);\n        }\n        else if (ex instanceof HttpMessageNotWritableException) {\n            HttpStatus status = HttpStatus.INTERNAL_SERVER_ERROR;\n            return handleHttpMessageNotWritable((HttpMessageNotWritableException) ex, headers, status, request);\n        }\n        else if (ex instanceof MethodArgumentNotValidException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleMethodArgumentNotValid((MethodArgumentNotValidException) ex, headers, status, request);\n        }\n        else if (ex instanceof MissingServletRequestPartException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleMissingServletRequestPart((MissingServletRequestPartException) ex, headers, status, request);\n        }\n        else if (ex instanceof BindException) {\n            HttpStatus status = HttpStatus.BAD_REQUEST;\n            return handleBindException((BindException) ex, headers, status, request);\n        }\n        else if (ex instanceof NoHandlerFoundException) {\n            HttpStatus status = HttpStatus.NOT_FOUND;\n            return handleNoHandlerFoundException((NoHandlerFoundException) ex, headers, status, request);\n        }\n        else if (ex instanceof AsyncRequestTimeoutException) {\n            HttpStatus status = HttpStatus.SERVICE_UNAVAILABLE;\n            return handleAsyncRequestTimeoutException((AsyncRequestTimeoutException) ex, headers, status, request);\n        }\n        else {\n            // Unknown exception, typically a wrapper with a common MVC exception as cause\n            // (since @ExceptionHandler type declarations also match first-level causes):\n            // We only deal with top-level MVC exceptions here, so let's rethrow the given\n            // exception for further processing through the HandlerExceptionResolver chain.\n            throw ex;\n        }\n    }\n\n  //..\n}\n")),(0,s.kt)("h2",{id:"\u901a\u8fc7\u7ee7\u627f-basicerrorcontroller-\u6765\u5904\u7406\u54cd\u5e94\u548cerror"},"\u901a\u8fc7\u7ee7\u627f BasicErrorController \u6765\u5904\u7406\u54cd\u5e94\u548c/error"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u8fd4\u56de\u7ed3\u6784  \u573a\u666f\u4e3b\u8981\u5728\u6539\u53d8\u8fd4\u56de\u7684\u54cd\u5e94\u5185\u5bb9\u4e5f\u53ef\u4ee5\u6839\u636e\u5185\u5bb9\u7c7b\u578b\u6dfb\u52a0\u7279\u5b9a\u7684\u5904\u7406\u6bd4\u5982",(0,s.kt)("inlineCode",{parentName:"p"},"text/plain"),"\u3002 \u9ed8\u8ba4\u5904\u7406text/html\u7684")),(0,s.kt)("h3",{id:"\u7528\u6cd5"},"\u7528\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class MyErrorController extends BasicErrorController {\n    public MyErrorController(ErrorAttributes errorAttributes) {\n        super(errorAttributes, new ErrorProperties());\n    }\n\n    /**\n     * \u8986\u76d6\u9ed8\u8ba4\u7684Json\u54cd\u5e94\n     */\n    @Override\n    public ResponseEntity<Map<String, Object>> error(HttpServletRequest request) {\n        Map<String, Object> body = getErrorAttributes(request, getErrorAttributeOptions(request, MediaType.ALL));\n        HttpStatus status = getStatus(request);\n\n        //\u8f93\u51fa\u81ea\u5b9a\u4e49\u7684Json\u683c\u5f0f\n        body.put("version", "1.0");\n\n        return new ResponseEntity<Map<String, Object>>(body, status);\n    }\n\n    /**\n     * \u8986\u76d6\u9ed8\u8ba4\u7684HTML\u54cd\u5e94\n     */\n    @Override\n    public ModelAndView errorHtml(HttpServletRequest request, HttpServletResponse response) {\n        //\u8bf7\u6c42\u7684\u72b6\u6001\n        HttpStatus status = getStatus(request);\n        response.setStatus(getStatus(request).value());\n\n        Map<String, Object> model = getErrorAttributes(request, getErrorAttributeOptions(request, MediaType.TEXT_HTML));\n        ModelAndView modelAndView = resolveErrorView(request, response, status, model);\n        response.setStatus(status.value());\n        //\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u89c6\u56fe\n        return (modelAndView != null) ? modelAndView : new ModelAndView("error", model);\n    }\n}\n')),(0,s.kt)("h3",{id:"\u6ce8\u610f"},"\u6ce8\u610f"),(0,s.kt)("p",null,"\u4e0d\u9f13\u52b1\u5728",(0,s.kt)("inlineCode",{parentName:"p"},"BasicErrorController")," \u91cc\u5904\u7406\u8fd4\u56de\u72b6\u6001\u7801\u5177\u4f53\u8bf7\u67e5\u770bGithub ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/spring-projects/spring-boot/issues/18952#issuecomment-557612055"},"issues")),(0,s.kt)("h2",{id:"\u901a\u8fc7\u7ee7\u627fdefaulterrorattributes\u6765\u5904\u7406\u9519\u8bef\u5c5e\u6027\u4fe1\u606f"},"\u901a\u8fc7\u7ee7\u627f",(0,s.kt)("inlineCode",{parentName:"h2"},"DefaultErrorAttributes"),"\u6765\u5904\u7406\u9519\u8bef\u5c5e\u6027\u4fe1\u606f"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"BasicErrorController")," \u63a7\u5236\u5668\u5229\u7528 ",(0,s.kt)("inlineCode",{parentName:"p"},"DefaultErrorAttributes")," \u6765\u83b7\u53d6\u9519\u8bef\u9875\u9762\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u573a\u666f\u9009\u62e9\u5728\u54ea\u4e00\u5c42\u5904\u7406\u3002")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class ExtendedErrorAttributes extends DefaultErrorAttributes {\n    @Override\n    public Map<String, Object> getErrorAttributes(WebRequest webRequest, ErrorAttributeOptions options) {\n        final Map<String, Object> errorAttributes =\n                super.getErrorAttributes(webRequest, options);\n                final Throwable throwable = super.getError(webRequest);\n        Throwable cause = throwable.getCause();\n        if (cause != null) {\n            Map causeErrorAttributes = new HashMap<>();\n            causeErrorAttributes.put("exception", cause.getClass().getName());\n            causeErrorAttributes.put("message", cause.getMessage());\n            errorAttributes.put("cause", causeErrorAttributes);\n        }\n        return errorAttributes;\n    }\n}\n')),(0,s.kt)("h2",{id:"\u81ea\u5b9a\u4e49\u5f02\u5e38responsestatus\u6ce8\u89e3\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u8fd4\u56de\u4fe1\u606f"},"\u81ea\u5b9a\u4e49\u5f02\u5e38@ResponseStatus\u6ce8\u89e3\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u8fd4\u56de\u4fe1\u606f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"/**\n* \u5f53\u53d1\u751fMyResourceNotFoundException\u5f02\u5e38\u65f6\uff0c\u8fd4\u56deHttpStatus.NOT_FOUND\u5bf9\u5e94\u7684\u72b6\u6001\u7801\uff1a404\n*/\n@ResponseStatus(value = HttpStatus.NOT_FOUND)\npublic class MyResourceNotFoundException extends RuntimeException {\n    public MyResourceNotFoundException() {\n        super();\n    }\n    public MyResourceNotFoundException(String message, Throwable cause) {\n        super(message, cause);\n    }\n    public MyResourceNotFoundException(String message) {\n        super(message);\n    }\n    public MyResourceNotFoundException(Throwable cause) {\n        super(cause);\n    }\n}\n")),(0,s.kt)("h2",{id:"\u5229\u7528\u5f02\u5e38\u7c7bresponsestatusexception\u629b\u51fa\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u5f02\u5e38\u4fe1\u606f"},"\u5229\u7528\u5f02\u5e38\u7c7bResponseStatusException\u629b\u51fa\u81ea\u5b9a\u4e49\u72b6\u6001\u7801\u548c\u5f02\u5e38\u4fe1\u606f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'@GetMapping("weixin/mp/jsapi/signature")\npublic ResponseEntity getAccessToken(String url) {\n    try {\n        return ResponseEntity.ok(mpService.createJsapiSignature(url));\n    } catch (WxErrorException e) {\n        throw new ResponseStatusException(HttpStatus.BAD_REQUEST, e.getMessage(), e);\n    }\n}\n')))}d.isMDXComponent=!0}}]);