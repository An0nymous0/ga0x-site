"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6478],{224:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(2374);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=u(r),d=i,y=g["".concat(c,".").concat(d)]||g[d]||p[d]||o;return r?n.createElement(y,a(a({ref:t},l),{},{components:r})):n.createElement(y,a({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},2643:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(6252),i=(r(2374),r(224));const o={title:"Spring Security - \u5728Spring Security\u4e2d\u6b63\u786e\u914d\u7f6eCORS\u8de8\u57df",sidebar_label:"\u5728Spring Security\u4e2d\u6b63\u786e\u914d\u7f6eCORS\u8de8\u57df",sidebar_position:1},a=void 0,s={unversionedId:"Java/spring-security/spring-security-cors",id:"Java/spring-security/spring-security-cors",title:"Spring Security - \u5728Spring Security\u4e2d\u6b63\u786e\u914d\u7f6eCORS\u8de8\u57df",description:"Spring Boot \u4e0e Spring Security \u7ec4\u5408\u4f7f\u7528\u65f6\u5982\u679c\u5f00\u542f\u5b89\u5168\u8ba4\u8bc1\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u6b63\u786e\u7684\u72b6\u6001\u5982\uff1a4xx 5xx \u7684\u54cd\u5e94\u8fd4\u56de0 \u5bfc\u81f4Access-Control-Allow-Origin\u6807\u5934\u88ab\u7834\u574f\uff0c\u5e76\u5728\u524d\u7aef\u63a7\u5236\u53f0\u63d0\u793a\u51fa\u8de8\u57df\u5931\u8d25\u3002",source:"@site/docs/Java/spring-security/spring-security-cors.md",sourceDirName:"Java/spring-security",slug:"/Java/spring-security/spring-security-cors",permalink:"/docs/Java/spring-security/spring-security-cors",draft:!1,editUrl:"https://github.com/An0nymous0/ga0x-site/tree/main/docs/Java/spring-security/spring-security-cors.md",tags:[],version:"current",lastUpdatedAt:1665741887,formattedLastUpdatedAt:"2022\u5e7410\u670814\u65e5",sidebarPosition:1,frontMatter:{title:"Spring Security - \u5728Spring Security\u4e2d\u6b63\u786e\u914d\u7f6eCORS\u8de8\u57df",sidebar_label:"\u5728Spring Security\u4e2d\u6b63\u786e\u914d\u7f6eCORS\u8de8\u57df",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"AuthenticationManager \u548c AuthenticationProvider",permalink:"/docs/Java/spring-security/authenticationManager-and-authenticationProvider"},next:{title:"Gradle \u6253\u5305\u5e76\u4e0a\u4f20\u5230\u79c1\u670d\u4ee5\u53ca\u5982\u4f55\u914d\u7f6e\u4f9d\u8d56",permalink:"/docs/Java/gradle/gradle-publish-a-java-library-to-a-maven-private-repository"}},c={},u=[{value:"spring boot cors \u914d\u7f6e",id:"spring-boot-cors-\u914d\u7f6e",level:2},{value:"Spring Security\u914d\u7f6e",id:"spring-security\u914d\u7f6e",level:2}],l={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Spring Boot \u4e0e Spring Security \u7ec4\u5408\u4f7f\u7528\u65f6\u5982\u679c\u5f00\u542f\u5b89\u5168\u8ba4\u8bc1\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u6b63\u786e\u7684\u72b6\u6001\u5982\uff1a4xx 5xx \u7684\u54cd\u5e94\u8fd4\u56de0 \u5bfc\u81f4Access-Control-Allow-Origin\u6807\u5934\u88ab\u7834\u574f\uff0c\u5e76\u5728\u524d\u7aef\u63a7\u5236\u53f0\u63d0\u793a\u51fa\u8de8\u57df\u5931\u8d25\u3002")),(0,i.kt)("h2",{id:"spring-boot-cors-\u914d\u7f6e"},"spring boot cors \u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="WebMvcConfiguration.java"',title:'"WebMvcConfiguration.java"'},'@Configuration\npublic class WebMvcConfiguration{\n    @Bean\n    public WebMvcConfigurer corsConfigurer() {\n        return new WebMvcConfigurer() {\n            @Override\n            public void addCorsMappings(CorsRegistry registry) {\n                registry.addMapping("/**")\n                        .allowedMethods("GET", "POST", "PUT", "DELETE")\n                        .allowedOrigins("*")\n                        .allowedHeaders("*");\n            }\n        };\n    }\n}\n')),(0,i.kt)("h2",{id:"spring-security\u914d\u7f6e"},"Spring Security\u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class SecurityConfiguration {\n    @Bean\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                // highlight-next-line\n                .requestMatchers(CorsUtils::isPreFlightRequest).permitAll()\n                .antMatchers(HttpMethod.POST, "/v1/user/login").permitAll()\n                .anyRequest().authenticated().and()\n                // highlight-next-line\n                .cors().and()\n                // highlight-next-line\n                .csrf().disable()\n                .httpBasic(Customizer.withDefaults())\n                .oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt)\n                .sessionManagement((session) -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))\n                .exceptionHandling((exceptions) -> exceptions\n                        .authenticationEntryPoint(new BearerTokenAuthenticationEntryPoint())\n                        .accessDeniedHandler(new BearerTokenAccessDeniedHandler())\n                );\n        return http.build();\n    }\n    \n    // highlight-start\n    @Bean\n    public CorsConfigurationSource corsConfigurationSource() {\n        final CorsConfiguration configuration = new CorsConfiguration();\n        configuration.setAllowedOrigins(ImmutableList.of("*"));\n        configuration.setAllowedMethods(ImmutableList.of("HEAD",\n                "GET", "POST", "PUT", "DELETE", "PATCH"));\n        // setAllowCredentials(true) is important, otherwise:\n        // The value of the \'Access-Control-Allow-Origin\' header in the response must not be the wildcard \'*\' when the request\'s credentials mode is \'include\'.\n//        configuration.setAllowCredentials(true);\n        // setAllowedHeaders is important! Without it, OPTIONS preflight request\n        // will fail with 403 Invalid CORS request\n        configuration.setAllowedHeaders(ImmutableList.of("Authorization", "Cache-Control", "Content-Type"));\n        final UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration("/**", configuration);\n        return source;\n    }\n    // highlight-end\n}\n')))}p.isMDXComponent=!0}}]);